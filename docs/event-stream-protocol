# Event Stream Protocol

LangManus uses the standard [Event Stream Protocol](https://www.w3.org/TR/eventsource/) to stream events to the client.

## Generic Events

### Text Message

```yaml
event: start_of_llm
data: {
    "agent_name": "supervisor",
}
```

```yaml
event: message
data: {
    "message_id": "1234567890",
    "delta": { "content": "Hello, " }
}
```

```yaml
event: message
data: {
    "message_id": "1234567890",
    "delta": { "content": "world" }
}
```

```yaml
event: message
data: {
    "message_id": "1234567890",
    "delta": { "content": "!" },
    "finish_reason":"stop"
}
```

```yaml
event: end_of_llm
data: {
    "agent_name": "supervisor",
}
```

### Start of Workflow
```yaml
event: start_of_workflow
data: {
    "workflow_id": "1234567890",
    "input": {"role": "user", "content": "研究一下南京汤包哪家最好吃?"},
}
```

### End of Workflow
```yaml
event: end_of_workflow
data: {
    "workflow_id": "1234567890",
    "messages": [
        {
            "role": "user",
            "content": "what is MCP?"
        },
        {
            "role": "user",
            "content": "MCP is..."
        }
    ]
}
```

### Start of Agent
```yaml
event: start_of_agent
data: {
    "agent_id": "1234567890_supervisor",
    "agent_name": "supervisor",
}
```

### End of Agent
```yaml
event: end_of_agent
data: {
    "agent_id": "1234567890_supervisor",
    "agent_name": "supervisor",
}
```

### Tool Call
```yaml
event: tool_call
data: {
    "tool_call_id": "1234567890_tool_call_1",
    "tool_name": "tool",
    "tool_input": {...}
}
```

### Tool Call Result
```yaml
event: tool_call_result
data: {
    "tool_call_id": "1234567890_tool_call_1",
    "tool_result": "result here"
}
```

### Tool Call Result Error
```yaml
event: tool_call_result_error
data: {
    "tool_call_id": "1234567890_tool_call_1",
    "error": "error msg here"
}
```

### Start of Report
```yaml
event: start_of_report
data: {
    "report_id": "1234567890_report"
}
```

```yaml
event: report_message
data: {
    "message_id": "1234567890",
    "delta": { "content": "Hello, " }
}
```

```yaml
event: report_message
data: {
    "message_id": "1234567890",
    "delta": { "content": "world" }
}
```

```yaml
event: report_message
data: {
    "message_id": "1234567890",
    "delta": { "content": "!" },
    "finish_reason":"stop"
}
```

### End of Workflow
```yaml
event: end_of_report
data: {
    "report_id": "1234567890_report"
}
```
